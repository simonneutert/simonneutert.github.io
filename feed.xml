<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://bridgetownrb.com/" version="1.3.4">Bridgetown</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-09-06T12:41:57+02:00</updated><id>/feed.xml</id><title type="html">Simon Neutert</title><subtitle>I am a Ruby (on Rails) developer and open source enthusiast. Super interest in Clojure. Based in Ingelheim, next to Mainz and Wiesbaden (Rhein-Main).</subtitle><entry><title type="html">Building a Simple Deno App with Handlebars and Oak</title><link href="/2025/deno-handlebars-oak/" rel="alternate" type="text/html" title="Building a Simple Deno App with Handlebars and Oak" /><published>2025-09-02T00:00:00+02:00</published><updated>2025-09-02T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-09-02-deno-handlebars-oak.md</id><content type="html" xml:base="/2025/deno-handlebars-oak/">&lt;p&gt;Deno is all the rage these days ‚Äî and for good reason!&lt;/p&gt;

&lt;p&gt;After building a basic interactive CLI app with &lt;a href=&quot;https://deno.com&quot;&gt;Deno&lt;/a&gt;, I wanted to try creating a simple web app.&lt;/p&gt;

&lt;p&gt;For this project, I decided to use &lt;a href=&quot;https://oakserver.org&quot;&gt;Oak&lt;/a&gt; as the web framework. Don‚Äôt ask me why I chose &lt;a href=&quot;https://handlebarsjs.com&quot;&gt;HandlebarsJS&lt;/a&gt; for templating - I just Googled ‚ÄúHandlebars with Oak‚Äù and started building. ü§∑‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;h2 id=&quot;initial-release&quot;&gt;Initial Release&lt;/h2&gt;

&lt;style&gt;
#screenshot {
    max-width: 90%;
    height: auto;
    max-height: 480px;
}
&lt;/style&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/utme.webp&quot; id=&quot;screenshot&quot; alt=&quot;Screenshot of the app&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Screenshot of the app&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-i-wanted-to-achieve&quot;&gt;What I Wanted to Achieve&lt;/h2&gt;

&lt;p&gt;The app is designed for outdoor enthusiasts to ‚Äúcollect‚Äù map tiles/areas. My goals included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rendering a mapbox map.&lt;/li&gt;
  &lt;li&gt;Allowing users to click on the map to add/remove a square.&lt;/li&gt;
  &lt;li&gt;Using a JSON file as the database.
    &lt;ul&gt;
      &lt;li&gt;Preloaded with areas that are inaccessible to the public.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Enabling data export in JSON format.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lessons-learned&quot;&gt;Lessons Learned&lt;/h2&gt;

&lt;p&gt;This was a rewarding (and sometimes unexpected) learning experience. ü•≤&lt;/p&gt;

&lt;h3 id=&quot;genesis&quot;&gt;Genesis&lt;/h3&gt;

&lt;p&gt;The proof-of-concept app came together quickly. I used Node‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;http-server&lt;/code&gt; to serve static files, along with a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; file, Bootstrap, &lt;code class=&quot;highlighter-rouge&quot;&gt;mapbox GL JS&lt;/code&gt;, and vanilla JavaScript.&lt;/p&gt;

&lt;h4 id=&quot;example-oak-route&quot;&gt;Example Oak Route&lt;/h4&gt;
&lt;p&gt;Here‚Äôs a simple Oak route handler:&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://deno.land/x/oak/mod.ts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello from Oak!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;challenges&quot;&gt;Challenges&lt;/h3&gt;

&lt;p&gt;Making this a public, hostable project required some changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tracking the API key in plain HTML üòµ‚Äçüí´ was a no-go.&lt;/li&gt;
  &lt;li&gt;The app was a single file. Not very maintainable.&lt;/li&gt;
  &lt;li&gt;Privacy concerns with CDNs required user consent before loading resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;choosing-deno-and-oak&quot;&gt;Choosing Deno and Oak&lt;/h3&gt;

&lt;p&gt;I knew Deno was the way forward, but finding the right framework took time. Based on my experience with Express and Fastify, I wanted a lightweight alternative.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fresh.deno.dev&quot;&gt;Fresh&lt;/a&gt; seemed promising but felt like overkill. Deno‚Äôs documentation then suggested:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We recommend &lt;code class=&quot;highlighter-rouge&quot;&gt;oak&lt;/code&gt; as a middleware framework for Deno.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Setting up Oak for a ‚Äúhello world‚Äù app was straightforward. But I needed a templating engine. Should I use &lt;code class=&quot;highlighter-rouge&quot;&gt;ejs&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;pug&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;handlebars&lt;/code&gt;? ü§î For reasons I can‚Äôt fully recall, I went with Handlebars, and after some trial and error, things started rendering.&lt;/p&gt;

&lt;p&gt;I kept the JavaScript vanilla, avoiding bundlers and transpilers‚Äîjust plain JS and MDN as my guide.&lt;/p&gt;

&lt;h3 id=&quot;building-and-deploying&quot;&gt;Building and Deploying&lt;/h3&gt;

&lt;p&gt;The app started to come together: I added vendor CSS/JS files, served static files via Oak, and implemented basic cookie logic for external resources (mapbox). Now, users need to confirm external resource use to access the app.&lt;/p&gt;

&lt;p&gt;Finally, I dockerized it, wrote a README, and pushed everything to GitHub.&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-Up&lt;/h2&gt;

&lt;p&gt;Deno was a joy to work with, though Oak‚Äôs documentation felt a bit sparse. The examples were helpful, but I needed some extra resources to understand it fully.&lt;/p&gt;

&lt;p&gt;Handlebars‚Ä¶ it‚Äôs aptly named; it was a bit ‚Äúhairy‚Äù to navigate without StackOverflow. For example, getting partials and helpers working took some trial and error, and the documentation was sometimes sparse.&lt;/p&gt;

&lt;p&gt;I learned &lt;code class=&quot;highlighter-rouge&quot;&gt;deno serve --parallel&lt;/code&gt; would utilize all cores for maximum throughput. üöÄ&lt;/p&gt;

&lt;p&gt;All in all, I‚Äôm happy with the result. The app is simple but effective. It lacks tests, but given the limited feature set, I learned a lot along the way. If I were to expand it, I‚Äôd add tests for the API endpoints, map interactions, and data export logic.&lt;/p&gt;

&lt;h2 id=&quot;what-would-i-do-differently&quot;&gt;What Would I Do Differently?&lt;/h2&gt;

&lt;p&gt;Next time, I might try &lt;a href=&quot;https://hono.dev/&quot;&gt;Hono&lt;/a&gt; as the backend solution and consider JSX for templating, as Hono supports it natively.&lt;/p&gt;

&lt;h2 id=&quot;project-on-github&quot;&gt;Project on GitHub&lt;/h2&gt;

&lt;p&gt;The project is available on GitHub: &lt;a href=&quot;https://github.com/simonneutert/unreachable_tiles_map_editor&quot;&gt;simonneutert/unreachable_tiles_map_editor&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">sq + jq: The Dynamic Duo for Data Mangling</title><link href="/2025/sq-jq-data-mangling/" rel="alternate" type="text/html" title="sq + jq: The Dynamic Duo for Data Mangling" /><published>2025-09-01T00:00:00+02:00</published><updated>2025-09-01T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-09-01-sq-jq-data-mangling.md</id><content type="html" xml:base="/2025/sq-jq-data-mangling/">&lt;p&gt;When it comes to transforming data on the command line, &lt;code class=&quot;highlighter-rouge&quot;&gt;sq&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; make a powerful combination. While &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; is the gold standard for JSON manipulation, &lt;code class=&quot;highlighter-rouge&quot;&gt;sq&lt;/code&gt; brings SQL-like querying to structured data formats.&lt;/p&gt;

&lt;p&gt;Visit &lt;a href=&quot;https://sq.io&quot;&gt;sq.io&lt;/a&gt; to learn more about &lt;code class=&quot;highlighter-rouge&quot;&gt;sq&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-this-combo-rocks&quot;&gt;Why This Combo Rocks&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;sq is a free/libre open-source data wrangling swiss-army knife to inspect, query, join, import, and export data. You could think of sq as jq for databases and documents, facilitating one-liners like:&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sq &apos;@postgres_db | .actor | .first_name, .last_name | .[0:5]&apos;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sq&lt;/code&gt; excels at querying databases and converting between formats, while &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; shines at transforming JSON structures. Together, they form a pipeline that can handle complex data transformations with elegance.&lt;/p&gt;

&lt;h2 id=&quot;the-sweet-spot&quot;&gt;The Sweet Spot&lt;/h2&gt;

&lt;p&gt;The magic happens when you need to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Extract data from databases/Excel/CSV in specific formats&lt;/li&gt;
  &lt;li&gt;Transform complex nested structures&lt;/li&gt;
  &lt;li&gt;Chain operations that leverage each tool‚Äôs strengths&lt;/li&gt;
  &lt;li&gt;Work with mixed data sources (SQL ‚Üí JSON ‚Üí processed output)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;real-world-example&quot;&gt;Real-World Example&lt;/h2&gt;

&lt;p&gt;Check out this &lt;a href=&quot;https://gist.github.com/simonneutert/f71a507d67142a2d59152f917bff9654&quot;&gt;gist&lt;/a&gt; for practical examples with a CSV file of &lt;code class=&quot;highlighter-rouge&quot;&gt;sq&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; working together to tackle common data processing tasks.&lt;/p&gt;

&lt;p&gt;The combination transforms what would be complex multi-step processes into concise, readable pipelines.&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">Distrobox is freedom - Coding on my current crush Aurora Linux</title><link href="/2025/distrobox/" rel="alternate" type="text/html" title="Distrobox is freedom - Coding on my current crush Aurora Linux" /><published>2025-08-31T00:00:00+02:00</published><updated>2025-08-31T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-08-31-distrobox.md</id><content type="html" xml:base="/2025/distrobox/">&lt;p&gt;Distrobox is a fantastic tool for running containerized Linux distributions on your host, giving you the flexibility to use different environments for coding, testing, or just experimenting‚Äîwithout messing up your main system.&lt;/p&gt;

&lt;h3 id=&quot;creating-and-cloning-a-distrobox-with-nvidia-support&quot;&gt;Creating and Cloning a Distrobox with NVIDIA Support&lt;/h3&gt;

&lt;p&gt;If you want GPU acceleration inside your container (for AI, graphics, etc.), just add the &lt;code class=&quot;highlighter-rouge&quot;&gt;--nvidia&lt;/code&gt; flag when creating or cloning a distrobox. Here‚Äôs a quick reminder:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;distrobox create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; trixie &lt;span class=&quot;nt&quot;&gt;--image&lt;/span&gt; debian:13
&lt;span class=&quot;c&quot;&gt;# To clone an existing box, this time enabling --nvidia graphics, because you need it to run GUI app like VSCode:&lt;/span&gt;
distrobox create &lt;span class=&quot;nt&quot;&gt;--clone&lt;/span&gt; trixie &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; devbox &lt;span class=&quot;nt&quot;&gt;--nvidia&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;example-throwaway-firefox-on-arch-with-temporary-home&quot;&gt;Example: Throwaway Firefox on Arch with Temporary Home&lt;/h3&gt;

&lt;p&gt;Need a disposable browser session? You can spin up an Arch container, install Firefox, and set your home to a temporary folder:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# never forget to add `--nvidia` when you are running on teamgreen and need a GUI&lt;/span&gt;
distrobox create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; arch-throwaway &lt;span class=&quot;nt&quot;&gt;--image&lt;/span&gt; archlinux:latest &lt;span class=&quot;nt&quot;&gt;--home&lt;/span&gt; /tmp/arch-home
distrobox enter arch-throwaway
&lt;span class=&quot;c&quot;&gt;# then in the distrobox&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Sy&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--noconfirm&lt;/span&gt; firefox
firefox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When you‚Äôre done, just exit and remove the container ‚Äî your browsing session is gone!&lt;/p&gt;

&lt;p&gt;Distrobox makes it easy to experiment, stay secure, and keep your host clean. Give it a try!&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">I Built a Meeting Notes App That Actually Makes Sense</title><link href="/2025/neetings/" rel="alternate" type="text/html" title="I Built a Meeting Notes App That Actually Makes Sense" /><published>2025-07-24T00:00:00+02:00</published><updated>2025-07-24T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-07-24-neetings.md</id><content type="html" xml:base="/2025/neetings/">&lt;p&gt;Be warned, this project was 100 % vibe-coded, using mostly Claude Code. It was a fun, yet demanding experience, and I learned a lot about building a web app that actually helps with meeting organization.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This project isn‚Äôt open sourced yet, but I‚Äôm planning to release the code soon! In the meantime, you can try the live app and see what I‚Äôve been working on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;I created &lt;strong&gt;&lt;a href=&quot;https://www.neetings.com&quot;&gt;Neetings&lt;/a&gt;&lt;/strong&gt;, a web app that transforms chaotic meeting notes into organized, actionable content using smart block types and Kanban-style organization. It runs 100% in your browser (no backend!), supports 11 different content types, and exports to multiple formats. Perfect for anyone tired of messy meeting notes that go nowhere.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Fun facts:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;After 2-3 months of evenings and weekends tinkering away, the project is finally at a point where I can show it off and actually use it myself. üéâ&lt;/li&gt;
  &lt;li&gt;I wouldn‚Äôt have been able to tackle this without the help of AI tools like Claude Code - to be honest. Or it would have taken me at least four times as long.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Hey there! üëã&lt;/p&gt;

&lt;p&gt;So, I had this problem. You know the one ‚Äì sitting in meetings, frantically scribbling notes, trying to capture everything, and then later staring at a wall of text wondering ‚Äúwhat did we actually decide?‚Äù and ‚Äúwho‚Äôs supposed to do what?‚Äù&lt;/p&gt;

&lt;p&gt;After one too many meetings where important decisions got lost in my messy notes, I decided to build something better. Enter &lt;strong&gt;Neetings&lt;/strong&gt; ‚Äì a meeting management app that actually helps you stay organized.&lt;/p&gt;

&lt;h2 id=&quot;what-makes-it-different&quot;&gt;What Makes It Different&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_overview.png&quot; alt=&quot;Main overview showing organized meetings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Instead of throwing everything into a generic text box, Neetings gives you &lt;strong&gt;11 specialized block types&lt;/strong&gt; for different kinds of content. Need to capture a decision? There‚Äôs a Decision block. Got an action item? TODO block. Random idea someone threw out? Idea block. You get the picture.&lt;/p&gt;

&lt;p&gt;The magic happens when you switch to Kanban view ‚Äì suddenly your linear meeting notes transform into organized columns by topic. It‚Äôs like having superpowers for meeting organization! ‚ú®&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_meeting_view.png&quot; alt=&quot;Meeting view with organized blocks&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-features-that-actually-matter&quot;&gt;The Features That Actually Matter&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Smart Block Types&lt;/strong&gt;: Instead of fighting with one-size-fits-all text boxes, you get purpose-built blocks for Notes, TODOs, Decisions, Issues, Ideas, and more. Each type has its own color and behavior.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kanban Organization&lt;/strong&gt;: Switch from boring linear notes to visual topic columns. Drag and drop blocks between topics as conversations evolve ‚Äì because meetings never follow the agenda anyway! üòÖ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_meeting_block_picker_modal.png&quot; alt=&quot;Block type selection modal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attendee Management&lt;/strong&gt;: Keep track of who‚Äôs in which meetings with a smart autocomplete system. No more ‚Äúwait, who said they‚Äôd handle that?‚Äù&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_attendee_management_view.png&quot; alt=&quot;Attendee management interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Powerful Search &amp;amp; Filtering&lt;/strong&gt;: Find that decision from three meetings ago in seconds. Filter by content type, completion status, or date ranges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_meeting_filter_view.png&quot; alt=&quot;Advanced filtering options&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privacy-first-because-your-data-matters&quot;&gt;Privacy First (Because Your Data Matters)&lt;/h2&gt;

&lt;p&gt;Here‚Äôs the best part ‚Äì &lt;strong&gt;everything runs in your browser&lt;/strong&gt;. No servers, no accounts, no ‚Äúwe promise we won‚Äôt look at your data‚Äù nonsense. Your meeting notes stay on your device, period.&lt;/p&gt;

&lt;p&gt;Want to move your data around? Export to Markdown, RTF, DOCX, or HTML. Want to share with your team? Copy the clean, organized output. Want to back up everything? Full JSON export has you covered.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_download_meeting_as_markdown_modal.png&quot; alt=&quot;Export options modal&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;built-for-real-developers&quot;&gt;Built for Real Developers&lt;/h2&gt;

&lt;p&gt;As someone who lives in the terminal and gets annoyed by bloated apps, I made sure Neetings is fast and lightweight. It‚Äôs built with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Preact&lt;/strong&gt; (because 3KB is better than 45KB)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt; (because bugs are annoying)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;196+ tests&lt;/strong&gt; (because I actually use this app)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Drag &amp;amp; drop&lt;/strong&gt; with proper sortKey algorithms (no jank!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2025/neetings/neetings_darkmode.png&quot; alt=&quot;Dark mode support&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The whole thing started as a side project to solve my own problem, but I‚Äôve been using it for months now and it‚Äôs genuinely changed how I handle meetings. No more post-meeting panic about whether I captured everything important.&lt;/p&gt;

&lt;h2 id=&quot;try-it-yourself&quot;&gt;Try It Yourself&lt;/h2&gt;

&lt;p&gt;The app is live at &lt;a href=&quot;https://www.neetings.com&quot;&gt;neetings.com&lt;/a&gt; ‚Äì no installation, no signup, just start organizing your first meeting. Or if you‚Äôre the ‚ÄúI want to see the code first‚Äù type (respect! ü´°), I‚Äôll be open sourcing it soon so you can dive into the implementation.&lt;/p&gt;

&lt;p&gt;I built this because I was tired of meeting chaos, and honestly? It‚Äôs been a game-changer for staying on top of what actually matters. Give it a shot next time you‚Äôre in a meeting that could have been an email (but wasn‚Äôt) ‚Äì you might be surprised how much clearer everything becomes when it‚Äôs properly organized.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;P.S. ‚Äì Yes, it has dark mode. Of course it has dark mode and yes, it was tedious to implement.&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">The Ten Commandments of Egoless Programming</title><link href="/2025/senior-engineers/" rel="alternate" type="text/html" title="The Ten Commandments of Egoless Programming" /><published>2025-07-02T00:00:00+02:00</published><updated>2025-07-02T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-07-02-senior-engineers.md</id><content type="html" xml:base="/2025/senior-engineers/">&lt;p&gt;The following is a copy of &lt;a href=&quot;https://www.kitchensoap.com/2012/10/25/on-being-a-senior-engineer/&quot;&gt;On Being A Senior Engineer&lt;/a&gt; by John Allspaw aka KitchenSoap&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Appropriate, even if old‚Ä¶&lt;br /&gt;
I‚Äôve seen it referenced as coming from &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/0932633420&quot;&gt;The Psychology of Computer Programming&lt;/a&gt;, written in 1971, but I don‚Äôt actually see it in the text. Regardless, here are The Ten Commandments of Egoless Programming, found on &lt;a href=&quot;https://twitter.com/wyattdanger&quot;&gt;@wyattdanger&lt;/a&gt;‚Äòs blog &lt;a href=&quot;http://blog.stephenwyattbush.com/2012/04/07/dad-and-the-ten-commandments-of-egoless-programming&quot;&gt;post&lt;/a&gt; on receiving advice from his dad:&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;1. Understand and accept that you will make mistakes.&lt;/strong&gt; The point is to find them early before they make it into production. Fortunately, except for the few of us developing rocket guidance software at JPL, mistakes are rarely fatal in our industry. We can, and should, learn, laugh, and move on.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;2. You are not your code.&lt;/strong&gt; Remember that the entire point of a review is to find problems, and problems will be found. Don‚Äôt take it personally when one is uncovered. (Allspaw note ‚Äì related: see below, number #10, and the points Theo made above.)&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;3. No matter how much ‚Äúkarate‚Äù you know, someone else will always know more.&lt;/strong&gt; Such an individual can teach you some new moves if you ask. Seek and accept input from others, especially when you think it‚Äôs not needed.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;4. Don‚Äôt rewrite code without consultation.&lt;/strong&gt; There‚Äôs a fine line between ‚Äúfixing code‚Äù and ‚Äúrewriting code.‚Äù Know the difference, and pursue stylistic changes within the framework of a code review, not as a lone enforcer.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;5. Treat people who know less than you with respect, deference, and patience.&lt;/strong&gt; Non-technical people who deal with developers on a regular basis almost universally hold the opinion that we are prima donnas at best and crybabies at worst. Don‚Äôt reinforce this stereotype with anger and impatience.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;6. The only constant in the world is change.&lt;/strong&gt; Be open to it and accept it with a smile. Look at each change to your requirements, platform, or tool as a new challenge, rather than some serious inconvenience to be fought.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;7. The only true authority stems from knowledge, not from position.&lt;/strong&gt; Knowledge engenders authority, and authority engenders respect ‚Äî so if you want respect in an egoless environment, cultivate knowledge.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;8. Fight for what you believe, but gracefully accept defeat.&lt;/strong&gt; Understand that sometimes your ideas will be overruled. Even if you are right, don‚Äôt take revenge or say ‚ÄúI told you so.‚Äù Never make your dearly departed idea a martyr or rallying cry.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;9. Don‚Äôt be &quot;the coder in the corner.&quot;&lt;/strong&gt; Don‚Äôt be the person in the dark office emerging only for soda. The coder in the corner is out of sight, out of touch, and out of control. This person has no voice in an open, collaborative environment. Get involved in conversations, and be a participant in your office community.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;10. Critique code instead of people ‚Äî be kind to the coder, not to the code.&lt;/strong&gt; As much as possible, make all of your comments positive and oriented to improving the code. Relate comments to local standards, program specs, increased performance, etc.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author></entry><entry><title type="html">Using Rodauth Programmatically</title><link href="/2025/rodauth-programmatically/" rel="alternate" type="text/html" title="Using Rodauth Programmatically" /><published>2025-05-04T00:00:00+02:00</published><updated>2025-05-04T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2025/2025-05-04-rodauth-programmatically.md</id><content type="html" xml:base="/2025/rodauth-programmatically/">&lt;h3 id=&quot;programmatically-delete-user-accounts-in-rodauth&quot;&gt;Programmatically Delete User Accounts in Rodauth&lt;/h3&gt;

&lt;p&gt;When working with user accounts, there‚Äôs often a need to go beyond what‚Äôs exposed in the UI. Maybe you‚Äôre debugging a staging environment. Maybe you‚Äôre implementing a GDPR ‚ÄúRight to be Forgotten‚Äù flow. Or maybe you‚Äôre just tired of clicking through modals. Either way, being able to manage Rodauth accounts programmatically is a useful capability to have in your toolbox. See the official &lt;a href=&quot;https://rodauth.jeremyevans.net/rdoc/files/README_rdoc.html#label-Using+Rodauth+as+a+Library&quot;&gt;Rodauth documentation&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a practical example: deleting a user account and cleaning up related data from the database‚Äîfully programmatically, with Rodauth at the helm.&lt;/p&gt;

&lt;h2 id=&quot;the-task-delete-an-account&quot;&gt;The Task: Delete an Account&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start with the Rake task:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Delete user account and all related data, usage example: rake &quot;delete_account[demo@test.test]&quot;&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:delete_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# rubocop:disable Metrics/BlockLength&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;rodauth&apos;&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# rubocop:disable Metrics/BlockLength&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:close_account&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;delete_account_on_close?&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account_status_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:status_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account_with_profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account_status_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Account with email &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; not found&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Account with id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; and status_id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_status_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; found&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:profiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;account_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account_with_profile&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Deleting profile with id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;No profile found for account with id: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, status_id: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_status_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Deleting in 3.. 2.. 1..&apos;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# init with DB connection as scope&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account_from_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# load account&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close_account&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# close account&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:account_remember_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# delete table: account_remember_keys&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:account_verification_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# delete table: account_verification_keys&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete_account&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# delete account&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account_with_profile&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# if account has a profile, or some other related data&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:activities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;profile_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:import_logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;profile_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:profiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;account_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StandardError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Error deleting account: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;whats-going-on-here&quot;&gt;What‚Äôs Going On Here?&lt;/h2&gt;

&lt;p&gt;This Rake task does the job of a full account teardown. Here‚Äôs a breakdown of the key steps:&lt;/p&gt;

&lt;h3 id=&quot;1-load-rodauth-in-a-system-context&quot;&gt;1. Load Rodauth in a System Context&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:close_account&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delete_account_on_close?&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We‚Äôre setting up a Rodauth instance outside of a request context. By using &lt;code class=&quot;highlighter-rouge&quot;&gt;Rodauth.lib&lt;/code&gt;, you can configure a system-level Rodauth object to interact with your accounts programmatically‚Äîperfect for background jobs or rake tasks like this.&lt;/p&gt;

&lt;h3 id=&quot;2-look-up-the-account&quot;&gt;2. Look Up the Account&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We locate the user by email and bail early if no match is found. Bonus points for verifying the account has a ‚Äúprofile‚Äù before diving into deletes‚Äîuseful when your app distinguishes between signed-up and fully onboarded users.&lt;/p&gt;

&lt;h3 id=&quot;3-close-the-account-via-rodauth&quot;&gt;3. Close the Account via Rodauth&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account_from_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close_account&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is where Rodauth does what it does best. We signal the account should be closed, and then optionally follow up with any cleanup like:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rodauth_system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete_account&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;delete_account&lt;/code&gt; method ensures Rodauth‚Äôs internal bookkeeping is respected. Think session tokens, remember keys, verification keys‚Äîyou want these cleared too.&lt;/p&gt;

&lt;h3 id=&quot;4-clean-up-app-specific-data&quot;&gt;4. Clean Up App-Specific Data&lt;/h3&gt;

&lt;p&gt;If the account has associated domain-specific records (like a user profile, activities, or import logs), they‚Äôre scrubbed here:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:profiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;account_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:activities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;profile_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is where you plug in your own application logic to go beyond what Rodauth manages by default.&lt;/p&gt;

&lt;h2 id=&quot;a-note-on-transactions&quot;&gt;A Note on Transactions&lt;/h2&gt;

&lt;p&gt;The entire operation is wrapped in a &lt;code class=&quot;highlighter-rouge&quot;&gt;DB.transaction&lt;/code&gt; block. That means if something fails midway‚Äîsay, the Rodauth call throws an exception‚Äîyour database state stays clean. Nothing‚Äôs half-deleted.&lt;/p&gt;

&lt;h2 id=&quot;add-a-countdown-for-drama-optional&quot;&gt;Add a Countdown for Drama (Optional)&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Deleting in 3.. 2.. 1..&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Totally optional. Totally satisfying.&lt;/p&gt;

&lt;h2 id=&quot;why-this-matters&quot;&gt;Why This Matters&lt;/h2&gt;

&lt;p&gt;Rodauth is designed to give you fine-grained control. While its plugins work out of the box in a request/response cycle, it‚Äôs also built to scale beyond it. By using &lt;code class=&quot;highlighter-rouge&quot;&gt;Rodauth.lib&lt;/code&gt;, you gain a CLI-friendly, background-job-ready interface that plays well with whatever admin or automation scripts you need.&lt;/p&gt;

&lt;p&gt;This pattern isn‚Äôt just for deleting users. You can use it to reset passwords, verify accounts, revoke sessions‚Äîanything Rodauth supports.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;If you‚Äôre building serious Ruby (Rails) applications and need secure, flexible auth, Rodauth is a solid choice. And once you‚Äôre ready to automate more of your user management, you‚Äôll be glad it supports this kind of programmatic interface.&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">Passwordless restart of systemd services</title><link href="/2025/passwordless-systemd-restarts/" rel="alternate" type="text/html" title="Passwordless restart of systemd services" /><published>2025-02-09T00:00:00+01:00</published><updated>2025-02-09T00:00:00+01:00</updated><id>repo://posts.collection/_posts/2025/2025-02-09-passwordless-systemd-restarts.md</id><content type="html" xml:base="/2025/passwordless-systemd-restarts/">&lt;p&gt;Before anything else, you need to edit the rights, do this as your sudo/admin
user:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vim visudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Adapt the line to your needs, first is the user, you want to give the
passwordless permission to restart the service, last entry of the line is the
name of the service.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# allow deployuser to restart the web services without needing a password
deployuser ALL=(ALL) NOPASSWD: /bin/systemctl restart myapponsystemd-worker.service
deployuser ALL=(ALL) NOPASSWD: /bin/systemctl restart myapponsystemd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then log into your VPS/Server as your deployuser and restart your app üöÄ&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart myapponsystemd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Source on YouTube &lt;a href=&quot;https://www.youtube.com/watch?v=DmbBgXK8M5M&quot;&gt;@Dreams of Code&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">Find your possible co-authors for your next commit using ripgrep and babashka</title><link href="/2025/git-co-authoring/" rel="alternate" type="text/html" title="Find your possible co-authors for your next commit using ripgrep and babashka" /><published>2025-01-18T00:00:00+01:00</published><updated>2025-01-18T00:00:00+01:00</updated><id>repo://posts.collection/_posts/2025/2025-01-18-git-co-authoring.md</id><content type="html" xml:base="/2025/git-co-authoring/">&lt;p&gt;When it comes to fairness, acknowledging the help or time your colleagues
contribute is crucial. One simple way to ensure proper attribution is by adding
co-authors to your commits.&lt;/p&gt;

&lt;p&gt;To add co-authors, include one or more &lt;code class=&quot;highlighter-rouge&quot;&gt;Co-authored-by&lt;/code&gt; trailers at the end of
your commit message, like this:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Commit message

Co-authored-by: Joel Califa &amp;lt;602352+califa@users.noreply.github.com&amp;gt;
Co-authored-by: Matt Clark &amp;lt;44023+mclark@users.noreply.github.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;with-basic-unix-tools&quot;&gt;With basic Unix tools&lt;/h2&gt;

&lt;p&gt;No fire, no flames, just the basic Unix tools you already have on your system:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;git-co-authored-by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git log &amp;amp;&amp;gt; /dev/null &amp;amp;&amp;amp; git log --shortstat | grep &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Author:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | sed &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;s/Author: //&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | sort -u | sed &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;s/^/Co-authored-by: /&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;with-ripgrep-and-babashka-&quot;&gt;With ripgrep and babashka üöÄ&lt;/h2&gt;

&lt;p&gt;Make sure to include these trailers after at least one blank line at the end of
your commit message.&lt;/p&gt;

&lt;p&gt;For added convenience, you can set up a helpful alias in your shell environment
(e.g., .bash_aliases, .zsh_aliases, or similar). Here‚Äôs a quick example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &amp;amp;&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git log &lt;span class=&quot;nt&quot;&gt;--shortstat&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 10000 | rg &lt;span class=&quot;s2&quot;&gt;&quot;Author:&quot;&lt;/span&gt; | bb &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;(map #(clojure.string/replace % #&quot;Author: &quot; &quot;Co-authored-by: &quot;) (set *input*))&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Here are the two tools you need to have installed, check out their official
documentation:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://babashka.org&quot;&gt;babshka&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;ripgrep on Github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;explanation-of-the-clojure-code&quot;&gt;Explanation of the clojure code&lt;/h2&gt;

&lt;p&gt;Let‚Äôs break down the babashka command
&lt;code class=&quot;highlighter-rouge&quot;&gt;bb -i -o &apos;(map #(clojure.string/replace % #&quot;Author: &quot; &quot;Co-authored-by: &quot;) (set *input*))&apos;&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bb&lt;/code&gt; - This is the babashka CLI command&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; - Flag that tells babashka to read from standard input&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt; - Flag that tells babashka to write to standard output&lt;/li&gt;
  &lt;li&gt;The main expression consists of several nested operations:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(set *input*)&lt;/code&gt; - Converts the input lines into a set, removing duplicates&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(map ...)&lt;/code&gt; - Applies a function to each element in the set&lt;/li&gt;
      &lt;li&gt;The function &lt;code class=&quot;highlighter-rouge&quot;&gt;#(clojure.string/replace % #&quot;Author: &quot; &quot;Co-authored-by: &quot;)&lt;/code&gt;
does the following:
        &lt;ul&gt;
          &lt;li&gt;Uses &lt;code class=&quot;highlighter-rouge&quot;&gt;clojure.string/replace&lt;/code&gt; to perform string replacement&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; is a placeholder for each input item&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&quot;Author: &quot;&lt;/code&gt; is a regex pattern matching ‚ÄúAuthor: ‚Äú&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Co-authored-by: &quot;&lt;/code&gt; replaces for the matched pattern&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In plain English: This command reads lines from standard input, removes
duplicates, and then removes the text ‚ÄúAuthor: ‚Äú from the beginning of each
remaining line.&lt;/p&gt;

&lt;p&gt;Example usage:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Author: John&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Author: Jane&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Author: John&quot;&lt;/span&gt; | bb &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;(map #(clojure.string/replace % #&quot;Author: &quot; &quot;Co-authored-by: &quot;) (set *input*)))&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Co-authored-by: John
Co-authored-by: Jane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wrapping-the-script-up&quot;&gt;Wrapping the script up&lt;/h2&gt;

&lt;p&gt;Running &lt;code class=&quot;highlighter-rouge&quot;&gt;git log &amp;amp;&amp;gt; /dev/null&lt;/code&gt; first ensures you avoid system errors when
executing the command.&lt;/p&gt;

&lt;p&gt;To make sure you have the necessary tools, install them using Homebrew or
Linuxbrew with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;borkdude/brew/babashka ripgrep
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy Pair-Programming!&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">2024 - Code Recap</title><link href="/2025/recap/" rel="alternate" type="text/html" title="2024 - Code Recap" /><published>2025-01-01T00:00:00+01:00</published><updated>2025-01-01T00:00:00+01:00</updated><id>repo://posts.collection/_posts/2025/2025-01-01-recap.md</id><content type="html" xml:base="/2025/recap/">&lt;p&gt;2024 had its ups and downs. I‚Äôve been working on a lot of different projects, some of them are public, some of them are private. I‚Äôve learned a lot about different technologies and programming languages. I‚Äôve been experimenting with different runtimes and I‚Äôve been contributing to open source projects.&lt;/p&gt;

&lt;p&gt;Overall I‚Äôm happy with the progress I made. I‚Äôve made some new friends along the way and I‚Äôve been able to help out in a few projects.&lt;/p&gt;

&lt;h2 id=&quot;programming-languages&quot;&gt;Programming Languages&lt;/h2&gt;

&lt;p&gt;Languages used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;JavaScript&lt;/li&gt;
  &lt;li&gt;Clojure / Babashka&lt;/li&gt;
  &lt;li&gt;TypeScript (new)&lt;/li&gt;
  &lt;li&gt;Java (new)&lt;/li&gt;
  &lt;li&gt;Go (new)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;JavaScript Bonus:&lt;/em&gt; experimenting with JavaScript runtimes played a huge part this year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deno (is what we‚Äôve all been waiting for)&lt;/li&gt;
  &lt;li&gt;Bun (is really cool, too)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;public-projects&quot;&gt;Public Projects&lt;/h2&gt;

&lt;p&gt;Here are the projects I‚Äôve shoved into existence this year:&lt;/p&gt;

&lt;h3 id=&quot;shell-curry-ruby--jekyll&quot;&gt;Shell-Curry (Ruby &amp;amp; Jekyll)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://shell-curry.simon-neutert.de/&quot;&gt;shell-curry&lt;/a&gt; is a curated list of shell tools and configurations. The main goal is to provide a curated list of shell tools and configurations that we use in our daily work.&lt;/p&gt;

&lt;h3 id=&quot;picnic-auth-typescriptdeno&quot;&gt;Picnic-Auth (TypeScript@Deno)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/picnic-auth&quot;&gt;picnic-auth&lt;/a&gt; is a simple authentication service that uses JWTs and BCrypt to authenticate users from an env file.&lt;/p&gt;

&lt;h3 id=&quot;wilson-typescriptdeno&quot;&gt;Wilson (TypeScript@Deno)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/wilson&quot;&gt;wilson&lt;/a&gt; is a glorified OpenAI Client, that works with recipe/form files to interact with threaded/multistep OpenAI Assistants. User Input via CLI.&lt;/p&gt;

&lt;h3 id=&quot;unreachable-tiles-map-editor-javascriptdeno&quot;&gt;Unreachable Tiles Map Editor (JavaScript@Deno)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/unreachable_tiles_map_editor&quot;&gt;unreachable_tiles_map_editor&lt;/a&gt; is a simple web interface to interact with a map, in order to mark tiles as unreachable.&lt;/p&gt;

&lt;h3 id=&quot;deno-garmin-js-sdk-to-json-deno-in-docker&quot;&gt;Deno Garmin JS SDK to JSON (Deno in Docker)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/deno-garmin-js-sdk-to-json&quot;&gt;deno-garmin-js-sdk-to-json&lt;/a&gt; is a compilable Deno wrapper around the Garmin JS SDK to extract JSON data from .fit files.&lt;/p&gt;

&lt;h3 id=&quot;strava-export-organizer-web-w-cli-ruby--go&quot;&gt;Strava Export Organizer Web w/ CLI (Ruby &amp;amp; Go)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/strava-export-organizer-web&quot;&gt;strava-export-organizer-web&lt;/a&gt; is a web interface for the Strava Export Organizer. The project pulls in &lt;a href=&quot;https://github.com/simonneutert/strava-export-organizer&quot;&gt;strava-export-organizer&lt;/a&gt;, a CLI tool written in Go to organize Strava Exports into a structured folder hierarchy.&lt;/p&gt;

&lt;h3 id=&quot;java-map-tile-metrics-w-cli-java&quot;&gt;Java Map Tile Metrics w/ CLI (Java)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/java-map-tile-metrics&quot;&gt;java-map-tile-metrics&lt;/a&gt; and &lt;a href=&quot;https://github.com/simonneutert/java-map-tile-metrics-cli&quot;&gt;java-map-tile-metrics-cli&lt;/a&gt; are Java implementations of the map tile metrics calculation. A score of a user‚Äôs visited places on a map.&lt;/p&gt;

&lt;h3 id=&quot;bb-map-tile-metrics-w-cli-babashka&quot;&gt;BB Map Tile Metrics w/ CLI (babashka)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/bb-map-tile-metrics&quot;&gt;bb-map-tile-metrics&lt;/a&gt; a Babashka (Clojure/Lisp) implementation of the map tile metrics calculation.&lt;/p&gt;

&lt;h2 id=&quot;revisited-public-projects&quot;&gt;Revisited Public Projects&lt;/h2&gt;

&lt;p&gt;Some projects have been revisited and improved:&lt;/p&gt;

&lt;h3 id=&quot;shuffle-gag-babashka&quot;&gt;Shuffle-GAG (babashka)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/shuffle-gag&quot;&gt;shuffle-gag&lt;/a&gt; is a github action based podcast scraper written in Babashka.&lt;/p&gt;

&lt;h3 id=&quot;git-hire-hire-on-fire--babashka&quot;&gt;Git-Hire, hire on fire üî• (babashka)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/git-hire&quot;&gt;git-hire&lt;/a&gt; a Babashka (Clojure/Lisp) to API scrape GitHub for users with a certain skillset in a certain location.&lt;/p&gt;

&lt;h3 id=&quot;ruby-telegram-login-web-stub-tutorial-ruby&quot;&gt;Ruby Telegram Login Web Stub Tutorial (Ruby)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/ruby-telegram-login-web-stub-tutorial&quot;&gt;ruby-telegram-login-web-stub-tutorial&lt;/a&gt; a ruby implementation of the Telegram Web-Login.&lt;/p&gt;

&lt;h3 id=&quot;pizza-dough-calculator-clojurescript&quot;&gt;Pizza Dough Calculator (ClojureScript)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simonneutert/pizza-dough-calculator&quot;&gt;Pizza Dough Calculator&lt;/a&gt; a ClojureScript implementation of a pizza dough calculator.&lt;/p&gt;

&lt;h2 id=&quot;topics-and-learnings-in-private-and-public-projects&quot;&gt;Topics and Learnings in Private and Public Projects&lt;/h2&gt;

&lt;p&gt;Every project I‚Äôve worked on this year has taught me something new. Here are some of the topics I‚Äôve been dealing with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VPS Server Setup&lt;/li&gt;
  &lt;li&gt;Caddy&lt;/li&gt;
  &lt;li&gt;intensive use of justfiles&lt;/li&gt;
  &lt;li&gt;document my ideas, urls, decisions, and thoughts in &lt;em&gt;readme.&lt;strong&gt;topic&lt;/strong&gt;.md&lt;/em&gt; files&lt;/li&gt;
  &lt;li&gt;Prompt Engineering
    &lt;ul&gt;
      &lt;li&gt;side effect: dealing/interacting with AIs had an impact on my documentation/communication for sure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;a glimpse into MongoDB (with Go)&lt;/li&gt;
  &lt;li&gt;Git Submodules (no conclusions yet)&lt;/li&gt;
  &lt;li&gt;Systemd&lt;/li&gt;
  &lt;li&gt;Ruby stuff:
    &lt;ul&gt;
      &lt;li&gt;a medium sized app with Roda, Rodauth, htmx and Postgres via Sequel
        &lt;ul&gt;
          &lt;li&gt;Sequel: Postgres can stream results üöÄ&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Passenger vs Puma (Ruby Webservers)&lt;/li&gt;
      &lt;li&gt;Honeybadger vs Sentry (Ruby Webservers)&lt;/li&gt;
      &lt;li&gt;YJIT config for production&lt;/li&gt;
      &lt;li&gt;jemalloc2 and ruby&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Much higher performance when the web server is setup using a socket NOT TCP&lt;/li&gt;
  &lt;li&gt;GHCR (GitHub Container Registry)&lt;/li&gt;
  &lt;li&gt;Traefik and cron jobbed deploys from GHCR.io&lt;/li&gt;
  &lt;li&gt;(p)React.js&lt;/li&gt;
  &lt;li&gt;Deno compile&lt;/li&gt;
  &lt;li&gt;Deno test&lt;/li&gt;
  &lt;li&gt;e2e with playwright using github workflows&lt;/li&gt;
  &lt;li&gt;some bugs can be fixed by upcasing the first letter of a string (roda-i18n) üòÖ&lt;/li&gt;
  &lt;li&gt;Github Workflows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;open-source-contributions&quot;&gt;Open Source Contributions&lt;/h2&gt;

&lt;p&gt;I contributed to the following projects (hope I didn‚Äôt forget any):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dblock/strava-ruby-client&quot;&gt;strava-ruby-client&lt;/a&gt; (co-mainainer) by &lt;a href=&quot;https://github.com/dblock&quot;&gt;@dblock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kematzy/roda-i18n&quot;&gt;roda-i18n&lt;/a&gt; (co-mainainer) by &lt;a href=&quot;https://github.com/kematzy&quot;&gt;@kematzy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/strzibny/invoice_printer/pulls&quot;&gt;strzibny/invoice_printer&lt;/a&gt; by &lt;a href=&quot;https://github.com/strzibny&quot;&gt;@strzibny&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wieczo/wieczos-virus-scanner&quot;&gt;wieczos-virus-scanner&lt;/a&gt; by &lt;a href=&quot;https://github.com/wieczo&quot;&gt;@wieczo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chr15m/scittle-tiny-slides&quot;&gt;scittle-tiny-slides&lt;/a&gt; by &lt;a href=&quot;https://github.com/chr15m&quot;&gt;@chr15m&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/r18n/r18n-core&quot;&gt;r18n-core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;anything-else&quot;&gt;Anything else?&lt;/h2&gt;

&lt;p&gt;Yeah, I learned &lt;a href=&quot;https://www.youtube.com/watch?v=fsKKf-WNtdI&quot;&gt;How Drum and Bass is made‚Ä¶&lt;/a&gt; on YouTube.&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">Project Launched üöÄ - ‚ÄúShell Curry‚Äù</title><link href="/2024/shell-curry/" rel="alternate" type="text/html" title="Project Launched üöÄ - &quot;Shell Curry&quot;" /><published>2024-12-17T00:00:00+01:00</published><updated>2024-12-17T00:00:00+01:00</updated><id>repo://posts.collection/_posts/2024/2024-12-17-shell-curry.md</id><content type="html" xml:base="/2024/shell-curry/">&lt;h3 id=&quot;a-curated-list-of-shell-tools-and-configurations&quot;&gt;A curated list of shell tools and configurations.&lt;/h3&gt;

&lt;p&gt;Together with a couple of developer friends, we launched a new project called &lt;a href=&quot;https://shell-curry.simon-neutert.de/&quot;&gt;shell-curry&lt;/a&gt; on GitHub. &lt;br /&gt;
&lt;del&gt;The repository will be made public soon.&lt;/del&gt; Is public (2025-08-21).&lt;/p&gt;

&lt;p&gt;The main goal is to provide a curated list of shell tools and configurations that we use in our daily work.&lt;/p&gt;

&lt;p&gt;If someone new to enhancing their shell environment can benefit from it, our mission is accomplished.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; file states:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Having the best developer setup is a never-ending crusade for some. &lt;br /&gt;
To others, it‚Äôs not even a side quest. &lt;br /&gt;
In HR, they label it as one of the dark arts. &lt;br /&gt;
To us, it‚Äôs nothing we lose hours on, but something we always come back to.&lt;/p&gt;

  &lt;p&gt;We want to share our findings with you, with practicality in mind. We are a group of developers who love to tinker‚Äîalways with a purpose. Each of our setups differs here and there, but there are huge overlaps in the tools we use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you‚Äôre the curious type, you might want to get your hands dirty with a Dockerized project setup. &lt;br /&gt;
Check out &lt;a href=&quot;https://github.com/simonneutert/shell-curry-debian-12-example&quot;&gt;simonneutert/shell-curry-debian-12-example&lt;/a&gt; on GitHub.&lt;/p&gt;</content><author><name></name></author></entry></feed>